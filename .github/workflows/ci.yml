name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test Apache Configuration
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        docker build -t test-apache-server .

    - name: Start test container
      run: |
        docker run -d --name test-apache -p 8080:80 test-apache-server
        sleep 10

    - name: Test container health
      run: |
        # Test main page
        curl -f http://localhost:8080 || exit 1
        
        # Test health endpoint
        curl -f http://localhost:8080/health || exit 1
        
        # Test server status
        curl -f http://localhost:8080/server-status || exit 1
        
        # Check for expected content
        curl -s http://localhost:8080 | grep "Modern Apache Web Server" || exit 1
        
        echo "✅ All tests passed!"

    - name: Check container logs
      if: failure()
      run: |
        docker logs test-apache

    - name: Cleanup
      if: always()
      run: |
        docker stop test-apache || true
        docker rm test-apache || true

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Docker image for scanning
      run: |
        docker build -t test-apache-server .

    - name: Run Trivy vulnerability scanner on filesystem
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'table'

    - name: Run Trivy vulnerability scanner on Docker image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'test-apache-server'
        format: 'table'

    - name: Run Trivy vulnerability scanner (SARIF output)
      uses: aquasecurity/trivy-action@master
      if: always()
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  terraform:
    name: Terraform Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0

    - name: Terraform Format Check
      working-directory: ./infrastructure/terraform
      run: terraform fmt -check

    - name: Create temporary terraform.tfvars for validation
      working-directory: ./infrastructure/terraform
      run: |
        cat > terraform.tfvars << EOF
        aws_region = "us-east-1"
        project_name = "modern-apache-server"
        environment = "ci-test"
        EOF

    - name: Terraform Init (without backend)
      working-directory: ./infrastructure/terraform
      run: terraform init -backend=false

    - name: Terraform Validate
      working-directory: ./infrastructure/terraform
      run: terraform validate

    - name: Terraform Plan (validation only)
      working-directory: ./infrastructure/terraform
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
      run: |
        if [[ -n "$AWS_ACCESS_KEY_ID" ]]; then
          echo "Running terraform plan with AWS credentials..."
          terraform plan -input=false
        else
          echo "⚠️  Skipping terraform plan - AWS credentials not available"
          echo "This is normal for external pull requests"
        fi
      continue-on-error: true